

class Lexer:
    def __init__(self, input):
        self.source = input + '\n'
        self.cur_char = ''
        self.cur_pos = -1
        self.next_char()

    #Process next char
    def next_char(self):
        self.cur_pos += 1
        if self.cur_pos >= len(self.source):
            self.cur_char = '\0' #EOF
        else:
            self.cur_char = self.source[self.cur_pos]

    #Return the lookahead char
    def peek(self):
        if self.cur_pos+1 >= len(self.source):
            return '\0'
        return self.source[self.cur_pos+1]

    #Invalid token found, print error and exit
    def abort(self, message):
        pass

    #Skip whitespace except newlines
    def skip_whitespace(self):
        pass

    #Skip comments
    def skip_comments(self):
        pass

    #Return next token
    def get_token(self):
        pass
